# Generated by Django 5.1.6 on 2025-03-03 22:51

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

def add_occupancy_data(apps, schema_editor):
    Occupancy = apps.get_model('webapp', 'Occupancy')
    occupancies = ['Primary Residence', 'Second Residence', 'Investment Property']
    for occupancy in occupancies:
        Occupancy.objects.create(name=occupancy)

def add_commitment_period_data(apps, schema_editor):
    CommitmentPeriod = apps.get_model('webapp', 'CommitmentPeriod')
    commitmentPeriods = ['30-Day Lock', '45-Day Lock', '60-Day Lock']
    for commitmentPeriod in commitmentPeriods:
        CommitmentPeriod.objects.create(name=commitmentPeriod)

def add_company_data(apps, schema_editor):
    Company = apps.get_model('webapp', 'Company')
    companies = ['Barrett Financial Group, L.L.C.', 
                    'Mina Peterson Real Estate', 
                    'David Hogan Homes - Windermere Real Estate', 
                    'Roy Towse at Compass', 
                    'The Brodsky Team'
                    ]
    for company in companies:
        Company.objects.create(name=company)

def add_property_type_data(apps, schema_editor):
    PropertyType = apps.get_model('webapp', 'PropertyType')
    propertyTypes = ['Single-Family Residence', 
                    'Multi-Family Residence', 
                    'Condominium', 
                    'Townhouse', 
                    'Cooperative',
                    'Office Buildings',
                    'Retail Spaces',
                    'Residential Land', 
                    'Commercial Land',
                    ]
    for propertyType in propertyTypes:
        PropertyType.objects.create(name=propertyType)

def add_comp_payer_type_data(apps, schema_editor):
    CompPayerType = apps.get_model('webapp', 'CompPayerType')
    compPayerTypes = ['Seller-Paid Commission', 
                    'Buyer-Paid Commission', 
                    'Split Commission', 
                    'Flat-Fee Commission', 
                    'Referral Fees',
                    ]
    for compPayerType in compPayerTypes:
        CompPayerType.objects.create(name=compPayerType)

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CommitmentPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CompPayerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Occupancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Lender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('correspondent', models.BooleanField(default=False)),
                ('credit_score', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99)])),
                ('monthly_income', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('commitment_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.commitmentperiod')),
                ('comp_payer_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.comppayertype')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.company')),
                ('occupancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.occupancy')),
                ('property_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.propertytype')),
            ],
        ),
        migrations.RunPython(add_occupancy_data),
        migrations.RunPython(add_commitment_period_data),
        migrations.RunPython(add_company_data),
        migrations.RunPython(add_property_type_data),
        migrations.RunPython(add_comp_payer_type_data),
    ]
